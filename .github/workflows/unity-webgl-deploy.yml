name: Unity WebGL → Deploy

on:
  push:
    branches: [ "Build" ]            # Build 브랜치 푸시 시 자동 실행
  workflow_dispatch:                 # 수동 실행 지원

env:
  UNITY_VERSION: 6000.0.51f1
  PROJECT_PATH: .
  BUILD_NAME: WebGL
  BUILDS_PATH: build

jobs:
  build-webgl:
    name: Build (WebGL)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout (with LFS)
        uses: actions/checkout@v4
        with:
          lfs: true
          submodules: recursive

      - name: Cache Unity Library
        uses: actions/cache@v4
        with:
          path: ${{ env.PROJECT_PATH }}/Library
          key: Library-${{ env.BUILD_NAME }}-WebGL-${{ hashFiles('**/Packages/manifest.json') }}
          restore-keys: |
            Library-${{ env.BUILD_NAME }}-WebGL-
            Library-

      - name: Build WebGL
        uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
        with:
          projectPath: ${{ env.PROJECT_PATH }}
          unityVersion: ${{ env.UNITY_VERSION }}
          targetPlatform: WebGL
          allowDirtyBuild: true
          buildName: ${{ env.BUILD_NAME }}
          buildsPath: ${{ env.BUILDS_PATH }}

      - name: Upload artifact (WebGL folder contents)
        uses: actions/upload-artifact@v4
        with:
          name: webgl-build
          path: ${{ env.BUILDS_PATH }}/${{ env.BUILD_NAME }}/
          if-no-files-found: error

  deploy:
    name: Deploy to HomePage-Game
    needs: build-webgl
    runs-on: ubuntu-latest

    steps:
      # 1) 빌드 산출물 다운로드
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: webgl-build
          path: build_dist

      # 2) 배포 대상 레포 체크아웃
      - name: Checkout deploy repo (main)
        uses: actions/checkout@v4
        with:
          repository: DguFarmSystem/HomePage-Game
          ref: main
          token: ${{ secrets.PERSONAL_TOKEN }}
          path: deploy

      # 3) Build/, TemplateData/, index.html 교체
      - name: Replace only Build/, TemplateData/, index.html
        run: |
          set -e
          cd deploy
          rm -rf Build TemplateData index.html
          cp -r ../build_dist/Build ./Build
          cp -r ../build_dist/TemplateData ./TemplateData
          cp -f ../build_dist/index.html ./index.html

      # 4) 커밋 & 푸시
      - name: Commit & Push (main)
        run: |
          cd deploy
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add Build TemplateData index.html
          git commit -m "Deploy WebGL build: $GITHUB_SHA" || echo "No changes to commit"
          git push origin main
